ï¼Ÿgtools
install.packages(gtools)
install.packages("gtools")
install.packages("gtools")
?combination()
?combinations()
?combinations()
?combinations
??combinations
vector_3 <- c(1,2,3,4)
combinations(4, 2, v=1:4, set=TRUE, repeats.allowed=FALSE)
getwd()
setwd()
setwd("c:/ESE5023")
install.packages("gtools")
library(gtools)
?combinations
vector_3 <- c(1,2,3,4)
combinations(4, 2, v=1:4, set=TRUE, repeats.allowed=FALSE)
combinations(4, 2, v=1:4, set=TRUE, repeats.allowed=FALSE)
combinations(4, 2, v=c(red,blue,green,black), set=TRUE, repeats.allowed=FALSE)
combinations(4, 2, v=c("red","blue","green","black"), set=TRUE, repeats.allowed=FALSE)
combinations(4, 2, v=c("red","blue","green","black"), set=TRUE, repeats.allowed=true)
combinations(4, 2, v=c("red","blue","green","black"), set=TRUE, repeats.allowed=TRUE)
permunations(4, 2, v=c("red","blue","green","black"), set=TRUE, repeats.allowed=TRUE)
permutations(4, 2, v=c("red","blue","green","black"), set=TRUE, repeats.allowed=TRUE)
permutations(4, 2, v=c("red","blue","green","black"), set=TRUE, repeats.allowed=FALSE)
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
View(Keeling_Data)
?for()
?for()
# Define the function FindTop()
FindTop        <- function(N){
MoviePage  <- readLines('https://movie.douban.com/top250', encoding='UTF-8')
Pattarn    <- '<span class=\"title\">&nbsp;/&nbsp;([^<]*)</span>'
Lines      <- grep(Pattarn, MoviePage, value=TRUE)
Lines      <- sub(Pattarn,  '\\1', Lines )
Names      <- sub('^ *', '', Lines)
Names      <- sub('&#39;', "'", Names)
print(Names[1:N])
}
# Call the function with arguement 5 and 10
FindTop(5)
FindTop(10)
?for (variable in vector) {
}}
?unique()
?plot
?plot()
data_year<-Keeling_Data&year
data_co2<-Keeling_Data&CO2
data_month<-Keeling_Data&month
data_co2[which(data_co2==-99.99]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<= mean(data_co2[this_year], na.rm=T)
}
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
data_year<-Keeling_Data&year
data_co2<-Keeling_Data&CO2
data_month<-Keeling_Data&month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<= mean(data_co2[this_year], na.rm=T)
}
data_year<-Keeling_Data$ear
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<= mean(data_co2[this_year], na.rm=T)
}
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<= mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(anuual_year_co2,this_year_mean_co2)
}
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<= mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(anuual_year_co2,this_year_mean_co2)
}
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(anuual_year_co2,this_year_mean_co2)
}
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
?plot
?seq()
plot(iyear,annual_year_co2,type="l")
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
plot(iyear,annual_year_co2,type="l")
plot(iyear,annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(iyear,this_year_mean_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
plot(iyear,this_year_mean_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(seq(1958,2020,1),this_year_mean_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$CO2
data_month<-Keeling_Data$month
data_co2<-Keeling_Data$co2
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
plot(seq(1958,2020,1),this_year_mean_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
data_month<-Keeling_Data$month
plot(seq(1958,2020,1),this_year_mean_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(seq(1958,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(iyear,annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(iyear,this_year_mean_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
?&&
?&&
?!is.na()
?is.na()
plot(seq(1959,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(seq(1959,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
plot(seq(1959,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
plot(seq(1958,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
co2_annual_growth<- c()
this_year<-which(data_year==iyear)
for(imonth in this_year){
if (data_month[imonth]==January){
co2_Jan<- data_co2[imonth]  }
if(data_month[imonth]==December){
co2_Dec<-data_co2[imonth]
}
if (!is.na(co2_Jan)&!is.na(co2_Dec)){
co2_annual_growth<-c(co2_annual_growth, co2_Dec-co2_Jan)
}
}
plot(seq(1959,2020,1),co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,seq(1959,2020,1),type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,seq(1959,2019,1),type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,seq(1959,2019,1),type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
CO2_annual_growth <- c()
for(iYear in 1959:2019){
CO2_Jan <- NA
CO2_Dec <- NA
ThisYear      <- which(Data_Year == iYear)
for(iMonth in ThisYear){
# We get valid value for Jan.
if( Data_Month[iMonth] =="January" ){
CO2_Jan <- Data_CO2[iMonth]
}
# We get valid value for Dec.
if( Data_Month[iMonth] =="December" ){
CO2_Dec <- Data_CO2[iMonth]
}
# If both, do the following:
if( !is.na(CO2_Dec) && !is.na(CO2_Jan) ){
CO2_annual_growth <- c(CO2_annual_growth, CO2_Dec - CO2_Jan)
}
}
}
plot(CO2_annual_growth, type="l",xlab="Year",ylab="Growth Rate [ppm/yr]")
abline(h=0, lty=2, col="red")
Keeling_Data <- read.csv(file = "co2_mm_mlo.csv", header = T)
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$co2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
plot(seq(1958,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
for(iyear in 1959:2019){
co2_Jan<-NA
co2_Dec<-NA
this_year<-which(data_year==iyear)
for(imonth in this_year){
if (data_month[imonth]==January){
co2_Jan<- data_co2[imonth]  }
if(data_month[imonth]==December){
co2_Dec<-data_co2[imonth]
}
if (!is.na(co2_Jan)&!is.na(co2_Dec)){
co2_annual_growth<-c(co2_annual_growth, co2_Dec-co2_Jan)
}
}
}
plot(co2_annual_growth,seq(1959,2019,1),type="l",xlab="year", ylab="growth ratio[ppm/year]")
data_year<-Keeling_Data$year
data_co2<-Keeling_Data$co2
data_month<-Keeling_Data$month
data_co2[which(data_co2==-99.99)]<-NA
annual_year_co2<-c()
for(iyear in unique(data_year)){
this_year<-which(data_year==iyear)
this_year_mean_co2<- mean(data_co2[this_year], na.rm=T)
annual_year_co2<-c(annual_year_co2,this_year_mean_co2)
}
plot(seq(1958,2020,1),annual_year_co2,type="l", xlab="Year",ylab="CO2 [ppm]")
co2_annual_growth<- c()
for(iyear in 1959:2019){
co2_Jan<-NA
co2_Dec<-NA
this_year<-which(data_year==iyear)
for(imonth in this_year){
if (data_month[imonth]==January){
co2_Jan<- data_co2[imonth]  }
if(data_month[imonth]==December){
co2_Dec<-data_co2[imonth]
}
if (!is.na(co2_Jan)&!is.na(co2_Dec)){
co2_annual_growth<-c(co2_annual_growth, co2_Dec-co2_Jan)
}
}
}
plot(co2_annual_growth,seq(1959,2019,1),type="l",xlab="year", ylab="growth ratio[ppm/year]")
co2_annual_growth<- c()
for(iyear in 1959:2019){
co2_Jan<-NA
co2_Dec<-NA
this_year<-which(data_year==iyear)
for(imonth in this_year){
if (data_month[imonth]==January){
co2_Jan<- data_co2[imonth]  }
if(data_month[imonth]==December){
co2_Dec<-data_co2[imonth]
}
if (!is.na(co2_Jan)&!is.na(co2_Dec)){
co2_annual_growth<-c(co2_annual_growth, co2_Dec-co2_Jan)
}
}
}
co2_annual_growth<- c()
for(iyear in 1959:2019){
co2_Jan<-NA
co2_Dec<-NA
this_year<-which(data_year==iyear)
for(imonth in this_year){
if (data_month[imonth]=="January"){
co2_Jan<- data_co2[imonth]  }
if(data_month[imonth]=="December"){
co2_Dec<-data_co2[imonth]
}
if (!is.na(co2_Jan)&!is.na(co2_Dec)){
co2_annual_growth<-c(co2_annual_growth, co2_Dec-co2_Jan)
}
}
}
plot(co2_annual_growth,seq(1959,2019,1),type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(seq(1959,2019,1),co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(seq(1959,2019),co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(1959:2019,co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(c(1959:2019),co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(c(1959:2020),co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(c(1959:2020,1),co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
# Define the function FindTop()
FindTop        <- function(N){
MoviePage  <- readLines('https://movie.douban.com/top250', encoding='UTF-8')
Pattarn    <- '<span class=\"title\">&nbsp;/&nbsp;([^<]*)</span>'
Lines      <- grep(Pattarn, MoviePage, value=TRUE)
Lines      <- sub(Pattarn,  '\\1', Lines )
Names      <- sub('^ *', '', Lines)
Names      <- sub('&#39;', "'", Names)
print(Names[1:N])
}
# Call the function with arguement 5 and 10
FindTop(5)
FindTop(10)
plot(co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
plot(co2_annual_growth,type="l",xlab="year", ylab="growth ratio[ppm/year]")
abline(h=0, lty=2, col="red")
